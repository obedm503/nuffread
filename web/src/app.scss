// Core CSS required for Ionic components to work properly
@import '~@ionic/react/css/core.css';

// Basic CSS for apps built with Ionic
@import '~@ionic/react/css/normalize.css';
@import '~@ionic/react/css/structure.css';
@import '~@ionic/react/css/typography.css';

// Optional CSS utils that can be commented out
@import '~@ionic/react/css/padding.css';
@import '~@ionic/react/css/float-elements.css';
@import '~@ionic/react/css/text-alignment.css';
@import '~@ionic/react/css/text-transformation.css';
@import '~@ionic/react/css/flex-utils.css';
@import '~@ionic/react/css/display.css';

/* Ionic Variables and Theming. For more information, please see
// https://beta.ionicframework.com/docs/theming/
// The app direction is used to include
// rtl styles in your app. For more information, please see
// https://beta.ionicframework.com/docs/layout/rtl
// $app-direction: ltr;
// Ionic Colors
// --------------------------------------------------
// Named colors makes it easy to reuse colors on various components.
// It's highly recommended to change the default colors
// to match your app's branding. Ionic provides eight layered colors
// that can be changed to theme an app. Additional colors can be
// added as well (see below). For more information, please see
// https://beta.ionicframework.com/docs/theming/advanced
// To easily create custom color palettes for your appâ€™s UI,
// check out our color generator:
// https://beta.ionicframework.com/docs/theming/color-generator
*/

:root {
  // brand colors
  --ion-color-primary: #15a0bf;
  --ion-color-primary-rgb: 21, 160, 191;
  --ion-color-primary-contrast: #ffffff;
  --ion-color-primary-contrast-rgb: 255, 255, 255;
  --ion-color-primary-shade: #128da8;
  --ion-color-primary-tint: #2caac5;

  --ion-color-secondary: #2590a8;
  --ion-color-secondary-rgb: 37, 144, 168;
  --ion-color-secondary-contrast: #ffffff;
  --ion-color-secondary-contrast-rgb: 255, 255, 255;
  --ion-color-secondary-shade: #217f94;
  --ion-color-secondary-tint: #3b9bb1;

  --ion-color-tertiary: #328293;
  --ion-color-tertiary-rgb: 50, 130, 147;
  --ion-color-tertiary-contrast: #ffffff;
  --ion-color-tertiary-contrast-rgb: 255, 255, 255;
  --ion-color-tertiary-shade: #2c7281;
  --ion-color-tertiary-tint: #478f9e;

  // ionic colors
  --ion-color-success: #10dc60;
  --ion-color-success-rgb: 16, 220, 96;
  --ion-color-success-contrast: #ffffff;
  --ion-color-success-contrast-rgb: 255, 255, 255;
  --ion-color-success-shade: #0ec254;
  --ion-color-success-tint: #28e070;

  --ion-color-warning: #ffce00;
  --ion-color-warning-rgb: 255, 206, 0;
  --ion-color-warning-contrast: #ffffff;
  --ion-color-warning-contrast-rgb: 255, 255, 255;
  --ion-color-warning-shade: #e0b500;
  --ion-color-warning-tint: #ffd31a;

  --ion-color-danger: #f04141;
  --ion-color-danger-rgb: 245, 61, 61;
  --ion-color-danger-contrast: #ffffff;
  --ion-color-danger-contrast-rgb: 255, 255, 255;
  --ion-color-danger-shade: #d33939;
  --ion-color-danger-tint: #f25454;

  --ion-color-dark: #222428;
  --ion-color-dark-rgb: 34, 34, 34;
  --ion-color-dark-contrast: #ffffff;
  --ion-color-dark-contrast-rgb: 255, 255, 255;
  --ion-color-dark-shade: #1e2023;
  --ion-color-dark-tint: #383a3e;

  --ion-color-medium: #989aa2;
  --ion-color-medium-rgb: 152, 154, 162;
  --ion-color-medium-contrast: #ffffff;
  --ion-color-medium-contrast-rgb: 255, 255, 255;
  --ion-color-medium-shade: #86888f;
  --ion-color-medium-tint: #a2a4ab;

  --ion-color-light: #f4f5f8;
  --ion-color-light-rgb: 244, 244, 244;
  --ion-color-light-contrast: #000000;
  --ion-color-light-contrast-rgb: 0, 0, 0;
  --ion-color-light-shade: #d7d8da;
  --ion-color-light-tint: #f5f6f9;
}

// custom colors
// https://ionicframework.com/docs/theming/colors#adding-colors
// custom colors need both color vars in :root and a class .ion-color-#{color}

:root {
  --ion-color-white: #ffffff;
  --ion-color-white-rgb: 255, 255, 255;
  --ion-color-white-contrast: #000000;
  --ion-color-white-contrast-rgb: 0, 0, 0;
  --ion-color-white-shade: #e0e0e0;
  --ion-color-white-tint: #ffffff;
}

$customColors: ('white');
@each $color in $customColors {
  .ion-color-#{$color} {
    --ion-color-base: var(--ion-color-#{$color});
    --ion-color-base-rgb: var(--ion-color-#{$color}-rgb);
    --ion-color-contrast: var(--ion-color-#{$color}-contrast);
    --ion-color-contrast-rgb: var(--ion-color-#{$color}-contrast-rgb);
    --ion-color-shade: var(--ion-color-#{$color}-shade);
    --ion-color-tint: var(--ion-color-#{$color}-tint);
  }
}

// Shared Variables
// --------------------------------------------------
// To customize the look and feel of this app, you can override
// the CSS variables found in Ionic's source files.
// To view all the possible Ionic variables, see:
// https://beta.ionicframework.com/docs/theming/css-variables#ionic-variables

:root {
  --ion-headings-font-weight: 300;
}

.md {
  --ion-toolbar-background: var(--ion-color-primary);
  --ion-toolbar-color: #fff;
}

/*
 * app styles
 */

// $primary: rgb(239, 148, 57);
// $secondary: rgb(252, 170, 88);

@media screen {
  img.print-cover.print-page {
    display: none;
  }
}

@media print {
  .is-hidden-print {
    display: none;
  }

  @page {
    margin-top: 1in;
    margin-bottom: 1in;
  }

  @page :first {
    margin: 0;
  }

  .print-page {
    page-break-inside: avoid;
    page-break-after: always;

    padding-left: 1in;
    padding-right: 1in;
  }

  img.print-cover.print-page {
    padding: 0;
  }

  .box {
    page-break-inside: avoid;
  }
}

#results-container {
  width: 100%;
  height: calc(100vh - 11rem);
  display: flex;
  position: fixed;
  overflow-y: auto;

  > :first-child {
    overflow-y: auto;
    width: 100%;
  }

  > .half {
    width: 50%;
  }
}

// using this until https://github.com/ionic-team/ionic/issues/18558 is fixed
ion-fab.fab-vertical-bottom.fab-horizontal-end {
  bottom: 20px;
  right: calc(20px + var(--ion-safe-area-right, 0px));

  > ion-fab-button {
    width: 70px;
    height: 70px;
    font-size: 25px;
  }
}

// ion-card.listing-card {
//   overflow: visible;
//   margin-top: 29px;

//   > ion-fab > ion-fab-button {
//     font-size: 20px;
//   }

//   > ion-card-header {
//     padding-top: 35px;
//   }

//   &.large {
//     margin-top: 51px;

//     > ion-fab {
//       &.fab-vertical-top {
//         top: -35px;
//       }

//       > ion-fab-button {
//         width: 70px;
//         height: 70px;
//         font-size: 25px;
//       }
//     }
//   }
// }
ion-skeleton-text {
  height: 1em; // default to font size
}

ion-grid.no-padding {
  padding: 0;
  ion-row,
  ion-col {
    padding: 0;
  }
}

// fix ios searchbar in header
ion-header .ios.toolbar-searchbar {
  > * {
    margin-top: auto;
    margin-bottom: auto;
  }

  ion-searchbar {
    height: var(--min-height);
    padding-top: 0;
    padding-bottom: 0;
  }
}

// fix button at the end of item
// affects form inputs with buttons (password control)
form ion-item > ion-button[slot='end'] {
  margin-top: auto;
}

// from https://github.com/ionic-team/ionic/blob/master/core/src/themes/ionic.globals.scss
$ionic-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
) !default;

// from https://github.com/ionic-team/ionic/blob/master/core/src/themes/ionic.mixins.scss
@function breakpoint-min($name) {
  $min: map-get($ionic-breakpoints, $name);

  @return if($name != index-to-key($ionic-breakpoints, 1), $min, null);
}
@mixin from($name) {
  $min: breakpoint-min($name);
  @if $min {
    @media screen and (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

ion-card.book-card {
  ion-card-content {
    padding: 0;
  }
}

img.book-cover-card {
  display: block;
  margin: 4px auto 4px auto;
  width: 100%;
  height: auto;

  @include from(sm) {
    width: 60%;
  }
  @include from(lg) {
    width: 50%;
  }
}

// with 6:9 aspect ratio
ion-skeleton-text.book-cover-card {
  margin: 4px auto 4px auto;
  width: 100%;
  height: 50vmax;

  @include from(sm) {
    width: calc(50vmax * 6 / 9);
    height: 50vmax;
  }

  @include from(md) {
    width: calc(60vmax * 6 / 9);
    height: 60vmax;
  }

  @include from(lg) {
    width: calc(50vmax * 6 / 9);
    height: 50vmax;
  }

  @include from(xl) {
    width: calc(55vh * 6 / 9);
    height: 55vh;
  }
}

// 6:9 aspect ratio
ion-skeleton-text.book-cover-basic {
  padding-top: 66%;
}
img.book-cover-basic,
ion-skeleton-text.book-cover-basic {
  width: 40%;
  margin-top: 4px;
  margin-right: 32px;
  margin-bottom: 4px;
}

.loading-page {
  width: 100%;
  height: 100%;

  > .spinner-wrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    > ion-spinner {
      width: 6em;
      height: 6em;
    }
  }
}

ion-modal {
  @include from(lg) {
    --width: 70% !important;
    --height: 90% !important;
  }
  @include from(xl) {
    --width: 50% !important;
  }
}

.cover-picker {
  > .pager {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    flex: 0 0 auto;
    margin-top: 0.8rem;

    > .pager-item {
      display: block;
      padding: 0;
      border: 0.2rem solid;
      border-color: white;

      .image {
        width: 6rem;
        padding: 0;
        margin: 0;
      }
    }
  }
}
