scalar Date

enum SystemUserType {
  ADMIN
  USER
}

type Query {
  search(query: String, maxPrice: Int, minPrice: Int): [Listing!]!
  top: [Listing!]!

  me: SystemUser

  listing(id: ID!): Listing
  users: [User!]!

  searchGoogle(query: String!): [Book!]
  googleBook(id: ID!): Book!
}

type Mutation {
  createUser(user: UserInput!): User!
  deleteUser(id: ID!): Boolean!

  createSchool(school: SchoolInput!): School!
  deleteSchool(id: ID!): Boolean!

  register(email: String!, password: String!): String!
  login(email: String!, password: String!, type: SystemUserType!): Boolean!
  logout: Boolean!
  confirm(id: String!): Boolean!
  resendEmail(binId: String, email: String): String!
}

type User {
  id: ID!

  email: String!
  name: String
  photo: String

  listings: [Listing!]!
}

input UserInput {
  schoolId: ID!
  name: String!
}

type School {
  id: ID!

  name: String!
}

input SchoolInput {
  name: String!
}

type Admin {
  id: ID!

  email: String!
}

union SystemUser = Admin | User

type Listing {
  id: ID!
  createdAt: Date!
  price: Int!

  bookId: String!
  book: Book!
  schoolId: String!
  school: School!
  userId: String!
  user: User!
}

type Book {
  id: String!
  etag: String
  googleId: String
  authors: [String!]!
  isbn: [String!]!
  publishedAt: Date
  title: String!
  subTitle: String
  thumbnail: String
}
